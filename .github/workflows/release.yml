name: Release
on:
  push:
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Calculate and create next version
        id: version
        run: |
          YEAR=$(date +%y)
          QUARTER=$(date +"%q")
          LATEST=$(git tag -l "v${YEAR}.${QUARTER}.*" | sort -V | tail -n1)
          echo "Debug: Year=$YEAR, Quarter=$QUARTER, Latest tag=$LATEST"
          
          if [[ -z "$LATEST" ]]; then
            NEXT="v${YEAR}.${QUARTER}.01"
          else
            NUM=$(echo $LATEST | cut -d. -f3 | sed 's/^0*//')
            if [[ -z "$NUM" ]]; then NUM=0; fi
            NEXT_NUM=$((NUM + 1))
            NEXT="v${YEAR}.${QUARTER}.$(printf "%02d" $NEXT_NUM)"
          fi
          
          echo "Calculated next version: $NEXT"
          echo "version=$NEXT" >> $GITHUB_OUTPUT
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag $NEXT -m "Release $NEXT - Quarterly release"
          git push origin $NEXT

  build:
    runs-on: ${{ matrix.runner }}
    if: always() && !cancelled()
    needs: [create-release]
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            platform: linux/amd64
            arch: amd64
          - runner: ubuntu-24.04-arm64
            platform: linux/arm64  
            arch: arm64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ matrix.platform }}
      
      - name: Create dist directory
        run: mkdir -p dist
      
      - name: Build binary with Docker
        run: |
          VERSION="${{ needs.create-release.outputs.version || github.ref_name }}"
          echo "Building Lucas for ${{ matrix.platform }} with version: $VERSION"
          
          docker buildx build \
            --platform=${{ matrix.platform }} \
            --build-arg VERSION="$VERSION" \
            --build-arg TARGETOS=linux \
            --build-arg TARGETARCH=${{ matrix.arch }} \
            --target=export \
            --output=type=local,dest=./dist \
            --file=Dockerfile.build \
            .
          
          # Rename the extracted binary
          mv ./dist/lucas ./dist/lucas-linux-${{ matrix.arch }}
          ls -la ./dist/
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lucas-linux-${{ matrix.arch }}
          path: dist/lucas-linux-${{ matrix.arch }}

  release:
    runs-on: ubuntu-latest
    if: always() && !cancelled()
    needs: [create-release, build]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      
      - name: List downloaded files
        run: ls -la dist/
      
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: ${{ needs.create-release.outputs.version || github.ref_name }}
          generate_release_notes: true