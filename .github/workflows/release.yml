name: Release
on:
  push:
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Calculate and create next version
        id: version
        run: |
          YEAR=$(date +%y)
          QUARTER=$(date +"%q")
          LATEST=$(git tag -l "v${YEAR}.${QUARTER}.*" | sort -V | tail -n1)
          echo "Debug: Year=$YEAR, Quarter=$QUARTER, Latest tag=$LATEST"
          
          if [[ -z "$LATEST" ]]; then
            NEXT="v${YEAR}.${QUARTER}.01"
          else
            NUM=$(echo $LATEST | cut -d. -f3 | sed 's/^0*//')
            if [[ -z "$NUM" ]]; then NUM=0; fi
            NEXT_NUM=$((NUM + 1))
            NEXT="v${YEAR}.${QUARTER}.$(printf "%02d" $NEXT_NUM)"
          fi
          
          echo "Calculated next version: $NEXT"
          echo "version=$NEXT" >> $GITHUB_OUTPUT
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag $NEXT -m "Release $NEXT - Quarterly release"
          git push origin $NEXT

  build:
    runs-on: ubuntu-latest
    if: always() && !cancelled()
    needs: [create-release]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Node.js for web build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      
      # Go for generate and build
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
      
      # Install ZMQ development libraries
      - name: Install ZMQ dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libzmq3-dev
      
      # Run go generate to build web assets
      - name: Generate web assets
        run: go generate ./internal/gateway
      
      # Create dist directory
      - name: Create dist directory
        run: mkdir -p dist
      
      # Build Linux AMD64 binary
      - name: Build Linux AMD64 binary
        env:
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: amd64
        run: |
          VERSION="${{ needs.create-release.outputs.version || github.ref_name }}"
          echo "Building for Linux AMD64 with version: $VERSION"
          go build -ldflags="-s -w -X main.version=$VERSION" -o dist/lucas-linux-amd64 .
          ls -la dist/
      
      # Upload binaries to release
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: ${{ needs.create-release.outputs.version || github.ref_name }}
          generate_release_notes: true